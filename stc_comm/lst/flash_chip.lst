C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE FLASH_CHIP
OBJECT MODULE PLACED IN .\out\flash_chip.obj
COMPILER INVOKED BY: C:\Programs86\Keil\C51\BIN\C51.EXE flash_chip.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND C
                    -ODE PRINT(.\lst\flash_chip.lst) OBJECT(.\out\flash_chip.obj)

line level    source

   1          #include "flash_chip.h"
   2          #include "../pc_comm/comm_rate.h"
   3          #include <reg51.h>
   4          
   5          static FlashChip flash;
   6          
   7          
   8          static void error() {
   9   1              for (;;)
  10   1                      SendData(COMM_MSG_ERR);
  11   1      }
  12          
  13          
  14          static void null_func() {
  15   1      }
  16          
  17          
  18          void clearFlashPoint() {
  19   1              flash.read      = null_func;
*** WARNING C182 IN LINE 19 OF FLASH_CHIP.C: pointer to different objects
  20   1              flash.write     = null_func;
  21   1              flash.init      = null_func;
  22   1          flash.flush     = null_func;
  23   1              flash.state     = COMM_MSG_FLASH_NOSEL;
  24   1              flash.mem_size  = 0;
  25   1      }
  26          
  27          
  28          void flash_T1() {
  29   1              BYTE i;
  30   1      
  31   1              clearFlashPoint();
  32   1      
  33   1              SendData(0x88);
  34   1              SendData(0x77);
  35   1              SendData(0x22);
  36   1      
  37   1              i = ReadData();
  38   1              SendData(~i);
  39   1              flash_T2();
  40   1      }
  41          
  42          
  43          void flash_T2() {
  44   1              for (;;) {
  45   2                      switch (ReadData()) {
  46   3                      case 0xC1:
  47   3                              SendData(COMM_MSG_TEST);
  48   3                              break;
  49   3      
  50   3                      case 0xC2:
  51   3                              SendData(COMM_MSG_OK);
  52   3                              return;
  53   3      
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 2   

  54   3                      case 0xC3:
  55   3                              SendData(flash.state);
  56   3                              if (flash.state == COMM_MSG_OK) {
  57   4                                      flash_T3();
  58   4                                      break;
  59   4                              }
  60   3                              break;
  61   3      
  62   3                      case 0xC4:
  63   3                              clearFlashPoint();
  64   3                              flash.state = COMM_MSG_OK;
  65   3      
  66   3                              switch(ReadData()) {
  67   4                              case 0:
  68   4                                      s29al016d(&flash);
  69   4                                      break;
  70   4                              case 1:
  71   4                                      at24c64a(&flash);
  72   4                                      break;
  73   4                              case 2:
  74   4                                      flash_chip_test(&flash);
  75   4                                      break;
  76   4                  case 3:
  77   4                      AT45DB161B(&flash);
  78   4                      break;
  79   4                              default:
  80   4                                      flash.state = COMM_MSG_FLASH_NOSEL;
  81   4                              }
  82   3      
  83   3                              (*flash.init)(0, 0);
  84   3                              SendData(flash.state);
  85   3                              break;
  86   3      
  87   3                      case 0xC5:
  88   3                              SendData(flash.state);
  89   3                              if (flash.state == COMM_MSG_OK) {
  90   4                                      flash_T4();
  91   4                              }
  92   3                              break;
  93   3                      }
  94   2              }
  95   1      }
  96          
  97          
  98          void flash_T3() {
  99   1              ADDR file_len;    
 100   1          ADDR tmp;
 101   1              int i;             
 102   1              Address file_pos;
 103   1                                                                
 104   1              const int buff_size = UART_BUFF_SIZE;
 105   1              BYTE buff[UART_BUFF_SIZE];
 106   1          BYTE rec_data, cal_crc;
 107   1      
 108   1          // 请求文件长度
 109   1              SendData(0xA1);
 110   1              if (ReadData() != COMM_MSG_OK) error();
 111   1          file_len = 0;
 112   1              file_len |= ReadData();
 113   1              file_len |= ReadData() << 8;
 114   1          tmp       = ReadData();
 115   1              file_len |= tmp << 16;
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 3   

 116   1      
 117   1          // 设置接收缓冲区长度
 118   1              SendData(0xA2);
 119   1              SendData(buff_size >> 4);
 120   1              if (ReadData() != COMM_MSG_OK) error();
 121   1                        
 122   1          // 发送文件指针     
 123   1              file_pos.a32 = 0;
 124   1          for (i=0; i<3; ++i) {
 125   2              SendData(0xAA + i);
 126   2                      tmp   = 0xFF;
 127   2                      tmp <<= i*8;
 128   2                      tmp  &= file_pos.a32;
 129   2                      tmp >>= i*8;
 130   2              SendData(tmp);
 131   2              if (ReadData() != COMM_MSG_OK) error();
 132   2          }
 133   1      
 134   1          // 接收数据
 135   1              while (file_pos.a32 < file_len) {
 136   2                      SendData(0xA3);
 137   2              cal_crc = 0;
 138   2                      for (i=0; i<buff_size; ++i) {
 139   3                              rec_data = ReadData();
 140   3                              buff[i] = rec_data;
 141   3                  cal_crc += rec_data;
 142   3                      }
 143   2      
 144   2              // 校验错误会重新请求包
 145   2              if (ReadData() != cal_crc) {
 146   3                  SendData(0xA4);
 147   3                  if (ReadData() != COMM_MSG_OK) error();
 148   3                  continue;
 149   3              }
 150   2      
 151   2                      // 发送到 flash
 152   2                      // 函数指针调用导致数据越位
 153   2                      for (i=0; i<buff_size; ++i) {
 154   3                              (*flash.write)(&file_pos, buff[i]);
 155   3                              ++file_pos.a32;
 156   3                      }
 157   2              }
 158   1          
 159   1          (*flash.flush)();
 160   1          // 结束文件请求操作
 161   1              SendData(0xAF);
 162   1              if (ReadData() != COMM_MSG_OK) error();
 163   1              return;
 164   1      }
 165          
 166          
 167          void flash_T4() {
 168   1              BYTE cot, len, crc, i;
 169   1              ADDR old, d;
 170   1              Address a;
 171   1      
 172   1              
 173   1              for (;;) {
 174   2                      switch(ReadData()) {
 175   3                      case 0xA0:
 176   3                              a.a8.m0 = ReadData();
 177   3                              SendData(a.a8.m0);
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 4   

 178   3                              break;
 179   3      
 180   3                      case 0xA1:
 181   3                              a.a8.m8 = ReadData();
 182   3                              SendData(a.a8.m8);
 183   3                              break;
 184   3      
 185   3                      case 0xA2:
 186   3                              a.a16.h = ReadData();
 187   3                              SendData(a.a16.h);
 188   3                              break;
 189   3      
 190   3                      case 0xAA:
 191   3                              len = ReadData();  
 192   3                              cot = 0;
 193   3                              old = a.a32;
 194   3      
 195   3                              while (cot < len) {
 196   4                                      // ! 调用函数越位 !
 197   4                                      d = (*flash.read)(&a);
 198   4                                      SendData(d);
 199   4                                      crc += d; 
 200   4      
 201   4                                      ++cot;
 202   4                                      ++a.a32;
 203   4                              }
 204   3      
 205   3                              a.a32 = old;
 206   3                              SendData(crc);
 207   3                              break;
 208   3      
 209   3                      case 0xAB:
 210   3                              d = (*flash.read)(&a);
 211   3                              SendData(d);
 212   3                              break;
 213   3      
 214   3                      case 0xAC:
 215   3                              d = flash.mem_size;
 216   3                              for (i=0; (d ^ 0x01) && (i < 32); ++i) {
 217   4                                      d >>= 1;
 218   4                              }
 219   3                              SendData(i);
 220   3                              break;
 221   3      
 222   3                      case 0xAF:
 223   3                              SendData(COMM_MSG_OK); 
 224   3                              goto t4_end;
 225   3                      }
 226   2              }
 227   1      t4_end:
 228   1              return;
 229   1      }
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0046 (BEGIN)
0000         L?0071:
0000 900000      R     MOV     DPTR,#tmp
0003 120000      E     LCALL   ?C?LSTXDATA
0006         L?0072:
0006 900000      R     MOV     DPTR,#tmp
0009         L?0073:
0009 E0                MOVX    A,@DPTR
000A FC                MOV     R4,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FD                MOV     R5,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 22                RET     
0014         L?0074:
0014 120000      E     LCALL   ?C?ICALL2
0017 E4                CLR     A
0018 FC                MOV     R4,A
0019 FD                MOV     R5,A
001A FE                MOV     R6,A
001B 900000      R     MOV     DPTR,#d
001E 120000      E     LCALL   ?C?LSTXDATA
0021         L?0075:
0021 900000      R     MOV     DPTR,#d
0024 A3                INC     DPTR
0025 A3                INC     DPTR
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 22                RET     
002A         L?0076:
002A 120000      E     LCALL   ?C?LSTXDATA
002D         L?0077:
002D 900000      R     MOV     DPTR,#file_len
0030 E0                MOVX    A,@DPTR
0031 F8                MOV     R0,A
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
0034 F9                MOV     R1,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FA                MOV     R2,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FB                MOV     R3,A
003B 22                RET     
003C         L?0079:
003C 900000      R     MOV     DPTR,#buff_size
003F E0                MOVX    A,@DPTR
0040 FE                MOV     R6,A
0041 A3                INC     DPTR
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 C3                CLR     C
0045 900000      R     MOV     DPTR,#i+01H
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 6   

0048 E0                MOVX    A,@DPTR
0049 9F                SUBB    A,R7
004A EE                MOV     A,R6
004B 6480              XRL     A,#080H
004D F8                MOV     R0,A
004E 900000      R     MOV     DPTR,#i
0051 E0                MOVX    A,@DPTR
0052 6480              XRL     A,#080H
0054 98                SUBB    A,R0
0055 22                RET     
0056         L?0080:
0056 900000      R     MOV     DPTR,#flash
0059         L?0081:
0059 A3                INC     DPTR
005A E0                MOVX    A,@DPTR
005B FA                MOV     R2,A
005C A3                INC     DPTR
005D E0                MOVX    A,@DPTR
005E F582              MOV     DPL,A
0060 8A83              MOV     DPH,R2
0062 22                RET     
0063         L?0082:
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D 2401              ADD     A,#01H
006F FF                MOV     R7,A
0070 E4                CLR     A
0071 3E                ADDC    A,R6
0072 FE                MOV     R6,A
0073 E4                CLR     A
0074 3D                ADDC    A,R5
0075 FD                MOV     R5,A
0076 E4                CLR     A
0077 3C                ADDC    A,R4
0078 FC                MOV     R4,A
0079 22                RET     
007A         L?0083:
007A FF                MOV     R7,A
007B EA                MOV     A,R2
007C 4E                ORL     A,R6
007D FE                MOV     R6,A
007E E9                MOV     A,R1
007F 4D                ORL     A,R5
0080 FD                MOV     R5,A
0081 E8                MOV     A,R0
0082 4C                ORL     A,R4
0083 FC                MOV     R4,A
0084 900000      R     MOV     DPTR,#file_len
0087 020000      E     LJMP    ?C?LSTXDATA
008A         L?0084:
008A FF                MOV     R7,A
008B 900000      R     MOV     DPTR,#file_pos
008E E0                MOVX    A,@DPTR
008F F8                MOV     R0,A
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 7   

0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 F9                MOV     R1,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FA                MOV     R2,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FB                MOV     R3,A
0099 22                RET     
009A         L?0086:
009A         L?0087:
009A 7B01              MOV     R3,#01H
009C 7A00        R     MOV     R2,#HIGH flash
009E 7900        R     MOV     R1,#LOW flash
00A0 22                RET     
00A1         L?0089:
00A1 E4                CLR     A
00A2         L?0090:
00A2 900000      R     MOV     DPTR,#i
00A5 F0                MOVX    @DPTR,A
00A6 A3                INC     DPTR
00A7 F0                MOVX    @DPTR,A
00A8 22                RET     
00A9         L?0091:
00A9 FF                MOV     R7,A
00AA A3                INC     DPTR
00AB A3                INC     DPTR
00AC E0                MOVX    A,@DPTR
00AD 75F008            MOV     B,#08H
00B0 A4                MUL     AB
00B1 F9                MOV     R1,A
00B2 F8                MOV     R0,A
00B3 22                RET     
00B4         L?0092:
00B4 A3                INC     DPTR
00B5 F0                MOVX    @DPTR,A
00B6 A3                INC     DPTR
00B7 E9                MOV     A,R1
00B8 F0                MOVX    @DPTR,A
00B9 A3                INC     DPTR
00BA 22                RET     
00BB         L?0093:
00BB         L?0094:
00BB 900000      R     MOV     DPTR,#i+01H
00BE E0                MOVX    A,@DPTR
00BF 04                INC     A
00C0 F0                MOVX    @DPTR,A
00C1 22                RET     
00C2         L?0095:
00C2         L?0096:
00C2 900000      R     MOV     DPTR,#i
00C5 E0                MOVX    A,@DPTR
00C6 04                INC     A
00C7 F0                MOVX    @DPTR,A
00C8 22                RET     
             ; FUNCTION Com0046 (END)

             ; FUNCTION error (BEGIN)
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
0000         ?C0001:
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 8   

                                           ; SOURCE LINE # 10
0000 7FE0              MOV     R7,#0E0H
0002 120000      E     LCALL   _SendData
0005 80F9              SJMP    ?C0001
             ; FUNCTION error (END)

             ; FUNCTION null_func (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
0000 22                RET     
             ; FUNCTION null_func (END)

             ; FUNCTION clearFlashPoint (BEGIN)
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0000 900000      R     MOV     DPTR,#flash
0003 74FF              MOV     A,#0FFH
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        R     MOV     A,#HIGH null_func
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        R     MOV     A,#LOW null_func
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
000E F9                MOV     R1,A
000F A3                INC     DPTR
0010 74FF              MOV     A,#0FFH
0012 F0                MOVX    @DPTR,A
0013 7400        R     MOV     A,#HIGH null_func
                                           ; SOURCE LINE # 21
0015 120000      R     LCALL   L?0092
0018 74FF              MOV     A,#0FFH
001A F0                MOVX    @DPTR,A
001B 7400        R     MOV     A,#HIGH null_func
                                           ; SOURCE LINE # 22
001D 120000      R     LCALL   L?0092
0020 74FF              MOV     A,#0FFH
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 7400        R     MOV     A,#HIGH null_func
0026 F0                MOVX    @DPTR,A
0027 A3                INC     DPTR
0028 E9                MOV     A,R1
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 23
002A A3                INC     DPTR
002B 74E1              MOV     A,#0E1H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 24
002E A3                INC     DPTR
002F 120000      E     LCALL   ?C?LSTKXDATA
0032 00                DB      00H
0033 00                DB      00H
0034 00                DB      00H
0035 00                DB      00H
                                           ; SOURCE LINE # 25
0036 22                RET     
             ; FUNCTION clearFlashPoint (END)

             ; FUNCTION flash_T1 (BEGIN)
                                           ; SOURCE LINE # 28
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 9   

                                           ; SOURCE LINE # 31
0000 120000      R     LCALL   clearFlashPoint
                                           ; SOURCE LINE # 33
0003 7F88              MOV     R7,#088H
0005 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 34
0008 7F77              MOV     R7,#077H
000A 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 35
000D 7F22              MOV     R7,#022H
000F 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 37
0012 120000      E     LCALL   ReadData
;---- Variable 'i' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 38
0015 EF                MOV     A,R7
0016 F4                CPL     A
0017 FF                MOV     R7,A
0018 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 39
001B 020000      R     LJMP    flash_T2
             ; FUNCTION flash_T1 (END)

             ; FUNCTION flash_T2 (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
0000         ?C0007:
                                           ; SOURCE LINE # 45
0000 120000      E     LCALL   ReadData
0003 EF                MOV     A,R7
0004 243E              ADD     A,#03EH
0006 6011              JZ      ?C0011
0008 14                DEC     A
0009 6013              JZ      ?C0013
000B 14                DEC     A
000C 601B              JZ      ?C0015
000E 14                DEC     A
000F 606F              JZ      ?C0022
0011 2404              ADD     A,#04H
0013 70EB              JNZ     ?C0007
                                           ; SOURCE LINE # 46
0015         ?C0010:
                                           ; SOURCE LINE # 47
0015 7F5F              MOV     R7,#05FH
                                           ; SOURCE LINE # 48
0017 8061              SJMP    ?C0063
                                           ; SOURCE LINE # 50
0019         ?C0011:
                                           ; SOURCE LINE # 51
0019 7F5A              MOV     R7,#05AH
001B 020000      E     LJMP    _SendData
                                           ; SOURCE LINE # 54
001E         ?C0013:
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
001E 120000      R     LCALL   L?0088
0021 B45ADC            CJNE    A,#05AH,?C0007
                                           ; SOURCE LINE # 57
0024 120000      R     LCALL   flash_T3
                                           ; SOURCE LINE # 58
0027 80D7              SJMP    ?C0007
                                           ; SOURCE LINE # 59
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 10  

                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 62
0029         ?C0015:
                                           ; SOURCE LINE # 63
0029 120000      R     LCALL   clearFlashPoint
                                           ; SOURCE LINE # 64
002C 900000      R     MOV     DPTR,#flash+0CH
002F 745A              MOV     A,#05AH
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
0032 120000      E     LCALL   ReadData
0035 EF                MOV     A,R7
0036 14                DEC     A
0037 6012              JZ      ?C0018
0039 14                DEC     A
003A 6017              JZ      ?C0019
003C 14                DEC     A
003D 601C              JZ      ?C0020
003F 2403              ADD     A,#03H
0041 7020              JNZ     ?C0021
                                           ; SOURCE LINE # 67
0043         ?C0017:
                                           ; SOURCE LINE # 68
0043 120000      R     LCALL   L?0086
0046 120000      E     LCALL   _s29al016d
                                           ; SOURCE LINE # 69
0049 801E              SJMP    ?C0016
                                           ; SOURCE LINE # 70
004B         ?C0018:
                                           ; SOURCE LINE # 71
004B 120000      R     LCALL   L?0086
004E 120000      E     LCALL   _at24c64a
                                           ; SOURCE LINE # 72
0051 8016              SJMP    ?C0016
                                           ; SOURCE LINE # 73
0053         ?C0019:
                                           ; SOURCE LINE # 74
0053 120000      R     LCALL   L?0087
0056 120000      E     LCALL   _flash_chip_test
                                           ; SOURCE LINE # 75
0059 800E              SJMP    ?C0016
                                           ; SOURCE LINE # 76
005B         ?C0020:
                                           ; SOURCE LINE # 77
005B 120000      R     LCALL   L?0087
005E 120000      E     LCALL   _AT45DB161B
                                           ; SOURCE LINE # 78
0061 8006              SJMP    ?C0016
                                           ; SOURCE LINE # 79
0063         ?C0021:
                                           ; SOURCE LINE # 80
0063 900000      R     MOV     DPTR,#flash+0CH
0066 74E1              MOV     A,#0E1H
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
0069         ?C0016:
                                           ; SOURCE LINE # 83
0069 900000      R     MOV     DPTR,#flash+06H
006C 120000      R     LCALL   L?0081
006F E4                CLR     A
0070 FD                MOV     R5,A
0071 FF                MOV     R7,A
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 11  

0072 120000      E     LCALL   ?C?ICALL2
                                           ; SOURCE LINE # 84
0075 900000      R     MOV     DPTR,#flash+0CH
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A         ?C0063:
007A 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 85
007D 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 87
0080         ?C0022:
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0080 120000      R     LCALL   L?0088
0083 645A              XRL     A,#05AH
0085 6003              JZ      $ + 5H
0087 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 90
008A 120000      R     LCALL   flash_T4
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
008D 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
0090         L?0088:
0090 900000      R     MOV     DPTR,#flash+0CH
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
0095 120000      E     LCALL   _SendData
0098 900000      R     MOV     DPTR,#flash+0CH
009B E0                MOVX    A,@DPTR
009C 22                RET     
             ; FUNCTION flash_T2 (END)

             ; FUNCTION flash_T3 (BEGIN)
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 104
0000 900000      R     MOV     DPTR,#buff_size
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 7420              MOV     A,#020H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
0009 7FA1              MOV     R7,#0A1H
                                           ; SOURCE LINE # 110
000B 120000      R     LCALL   L?0085
000E 6003              JZ      ?C0024
0010 120000      R     LCALL   error
0013         ?C0024:
                                           ; SOURCE LINE # 111
0013 900000      R     MOV     DPTR,#file_len
0016 120000      E     LCALL   ?C?LSTKXDATA
0019 00                DB      00H
001A 00                DB      00H
001B 00                DB      00H
001C 00                DB      00H
                                           ; SOURCE LINE # 112
001D 120000      R     LCALL   L?0077
0020 C000              PUSH    AR0
0022 C001              PUSH    AR1
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 12  

0024 C002              PUSH    AR2
0026 C003              PUSH    AR3
0028 120000      E     LCALL   ReadData
002B D003              POP     AR3
002D D002              POP     AR2
002F D001              POP     AR1
0031 D000              POP     AR0
0033 EB                MOV     A,R3
0034 4F                ORL     A,R7
0035 FF                MOV     R7,A
0036 EA                MOV     A,R2
0037 FE                MOV     R6,A
0038 E9                MOV     A,R1
0039 FD                MOV     R5,A
003A E8                MOV     A,R0
003B FC                MOV     R4,A
003C 900000      R     MOV     DPTR,#file_len
                                           ; SOURCE LINE # 113
003F 120000      R     LCALL   L?0076
0042 C000              PUSH    AR0
0044 C001              PUSH    AR1
0046 C002              PUSH    AR2
0048 C003              PUSH    AR3
004A 120000      E     LCALL   ReadData
004D EF                MOV     A,R7
004E FE                MOV     R6,A
004F 33                RLC     A
0050 95E0              SUBB    A,ACC
0052 FD                MOV     R5,A
0053 FC                MOV     R4,A
0054 D003              POP     AR3
0056 D002              POP     AR2
0058 D001              POP     AR1
005A D000              POP     AR0
005C EB                MOV     A,R3
005D 120000      R     LCALL   L?0083
                                           ; SOURCE LINE # 114
0060 120000      E     LCALL   ReadData
0063 E4                CLR     A
0064 FC                MOV     R4,A
0065 FD                MOV     R5,A
0066 FE                MOV     R6,A
0067 900000      R     MOV     DPTR,#tmp
                                           ; SOURCE LINE # 115
006A 120000      R     LCALL   L?0076
006D C000              PUSH    AR0
006F A3                INC     DPTR
0070 120000      R     LCALL   L?0073
0073 FF                MOV     R7,A
0074 7810              MOV     R0,#010H
0076 120000      E     LCALL   ?C?LSHL
0079 D000              POP     AR0
007B EB                MOV     A,R3
007C 4F                ORL     A,R7
007D 120000      R     LCALL   L?0083
                                           ; SOURCE LINE # 118
0080 7FA2              MOV     R7,#0A2H
0082 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 119
0085 900000      R     MOV     DPTR,#buff_size
0088 E0                MOVX    A,@DPTR
0089 FE                MOV     R6,A
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 13  

008A A3                INC     DPTR
008B E0                MOVX    A,@DPTR
008C 7804              MOV     R0,#04H
008E         ?C0059:
008E CE                XCH     A,R6
008F A2E7              MOV     C,ACC.7
0091 13                RRC     A
0092 CE                XCH     A,R6
0093 13                RRC     A
0094 D8F8              DJNZ    R0,?C0059
                                           ; SOURCE LINE # 120
0096 120000      R     LCALL   L?0078
0099 6003              JZ      ?C0025
009B 120000      R     LCALL   error
009E         ?C0025:
                                           ; SOURCE LINE # 123
009E 900000      R     MOV     DPTR,#file_pos
00A1 120000      E     LCALL   ?C?LSTKXDATA
00A4 00                DB      00H
00A5 00                DB      00H
00A6 00                DB      00H
00A7 00                DB      00H
                                           ; SOURCE LINE # 124
00A8 120000      R     LCALL   L?0089
00AB         ?C0026:
00AB 900000      R     MOV     DPTR,#i
00AE E0                MOVX    A,@DPTR
00AF FE                MOV     R6,A
00B0 A3                INC     DPTR
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 C3                CLR     C
00B4 9403              SUBB    A,#03H
00B6 EE                MOV     A,R6
00B7 6480              XRL     A,#080H
00B9 9480              SUBB    A,#080H
00BB 5055              JNC     ?C0030
                                           ; SOURCE LINE # 125
00BD EF                MOV     A,R7
00BE 24AA              ADD     A,#0AAH
00C0 FF                MOV     R7,A
00C1 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 126
00C4 900000      R     MOV     DPTR,#tmp
00C7 120000      E     LCALL   ?C?LSTKXDATA
00CA 00                DB      00H
00CB 00                DB      00H
00CC 00                DB      00H
00CD FF                DB      0FFH
                                           ; SOURCE LINE # 127
00CE 120000      R     LCALL   L?0072
00D1 120000      R     LCALL   L?0091
00D4 120000      E     LCALL   ?C?LSHL
                                           ; SOURCE LINE # 128
00D7 120000      R     LCALL   L?0071
00DA 120000      R     LCALL   L?0084
00DD EF                MOV     A,R7
00DE 5B                ANL     A,R3
00DF FF                MOV     R7,A
00E0 EE                MOV     A,R6
00E1 5A                ANL     A,R2
00E2 FE                MOV     R6,A
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 14  

00E3 ED                MOV     A,R5
00E4 59                ANL     A,R1
00E5 FD                MOV     R5,A
00E6 EC                MOV     A,R4
00E7 58                ANL     A,R0
00E8 FC                MOV     R4,A
                                           ; SOURCE LINE # 129
00E9 120000      R     LCALL   L?0071
00EC 120000      R     LCALL   L?0091
00EF 120000      E     LCALL   ?C?ULSHR
00F2 900000      R     MOV     DPTR,#tmp
00F5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 130
00F8 900000      R     MOV     DPTR,#tmp
00FB A3                INC     DPTR
00FC A3                INC     DPTR
00FD A3                INC     DPTR
00FE E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 131
00FF 120000      R     LCALL   L?0078
0102 6003              JZ      ?C0028
0104 120000      R     LCALL   error
                                           ; SOURCE LINE # 132
0107         ?C0028:
0107 120000      R     LCALL   L?0093
010A 7003              JNZ     ?C0060
010C 120000      R     LCALL   L?0095
010F         ?C0060:
010F 020000      R     LJMP    ?C0026
0112         ?C0030:
                                           ; SOURCE LINE # 135
0112 900000      R     MOV     DPTR,#file_len
0115 120000      R     LCALL   L?0073
0118 120000      R     LCALL   L?0084
011B C3                CLR     C
011C 120000      E     LCALL   ?C?ULCMP
011F 4003              JC      $ + 5H
0121 020000      R     LJMP    ?C0031
                                           ; SOURCE LINE # 136
0124 7FA3              MOV     R7,#0A3H
0126 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 137
0129 E4                CLR     A
012A 900000      R     MOV     DPTR,#cal_crc
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
012E 120000      R     LCALL   L?0090
0131         ?C0032:
0131 120000      R     LCALL   L?0079
0134 5025              JNC     ?C0033
                                           ; SOURCE LINE # 139
0136 120000      E     LCALL   ReadData
;---- Variable 'rec_data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 140
0139 900000      R     MOV     DPTR,#i
013C E0                MOVX    A,@DPTR
013D FC                MOV     R4,A
013E A3                INC     DPTR
013F E0                MOVX    A,@DPTR
0140 2400        R     ADD     A,#LOW buff
0142 F582              MOV     DPL,A
0144 7400        R     MOV     A,#HIGH buff
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 15  

0146 3C                ADDC    A,R4
0147 F583              MOV     DPH,A
0149 EF                MOV     A,R7
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
014B 900000      R     MOV     DPTR,#cal_crc
014E E0                MOVX    A,@DPTR
014F 2F                ADD     A,R7
0150 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0151 120000      R     LCALL   L?0093
0154 7003              JNZ     ?C0061
0156 120000      R     LCALL   L?0095
0159         ?C0061:
0159 80D6              SJMP    ?C0032
015B         ?C0033:
                                           ; SOURCE LINE # 145
015B 120000      E     LCALL   ReadData
015E 900000      R     MOV     DPTR,#cal_crc
0161 E0                MOVX    A,@DPTR
0162 6F                XRL     A,R7
0163 600D              JZ      ?C0035
                                           ; SOURCE LINE # 146
0165 7FA4              MOV     R7,#0A4H
                                           ; SOURCE LINE # 147
0167 120000      R     LCALL   L?0085
016A 60A6              JZ      ?C0030
016C 120000      R     LCALL   error
                                           ; SOURCE LINE # 148
016F 020000      R     LJMP    ?C0030
                                           ; SOURCE LINE # 149
0172         ?C0035:
                                           ; SOURCE LINE # 153
0172 120000      R     LCALL   L?0089
0175         ?C0037:
0175 120000      R     LCALL   L?0079
0178 5098              JNC     ?C0030
                                           ; SOURCE LINE # 154
017A 7B01              MOV     R3,#01H
017C 7A00        R     MOV     R2,#HIGH file_pos
017E 7900        R     MOV     R1,#LOW file_pos
0180 C002              PUSH    AR2
0182 E0                MOVX    A,@DPTR
0183 FE                MOV     R6,A
0184 A3                INC     DPTR
0185 E0                MOVX    A,@DPTR
0186 2400        R     ADD     A,#LOW buff
0188 F582              MOV     DPL,A
018A 7400        R     MOV     A,#HIGH buff
018C 3E                ADDC    A,R6
018D F583              MOV     DPH,A
018F E0                MOVX    A,@DPTR
0190 FD                MOV     R5,A
0191 900000      R     MOV     DPTR,#flash+03H
0194 120000      R     LCALL   L?0081
0197 D002              POP     AR2
0199 120000      E     LCALL   ?C?ICALL2
                                           ; SOURCE LINE # 155
019C 900000      R     MOV     DPTR,#file_pos
019F 120000      R     LCALL   L?0082
01A2 900000      R     MOV     DPTR,#file_pos
01A5 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 16  

                                           ; SOURCE LINE # 156
01A8 120000      R     LCALL   L?0094
01AB 7003              JNZ     ?C0062
01AD 120000      R     LCALL   L?0096
01B0         ?C0062:
01B0 80C3              SJMP    ?C0037
                                           ; SOURCE LINE # 157
01B2         ?C0031:
                                           ; SOURCE LINE # 159
01B2 900000      R     MOV     DPTR,#flash+09H
01B5 A3                INC     DPTR
01B6 E0                MOVX    A,@DPTR
01B7 FA                MOV     R2,A
01B8 A3                INC     DPTR
01B9 E0                MOVX    A,@DPTR
01BA F9                MOV     R1,A
01BB 120000      E     LCALL   ?C?ICALL
                                           ; SOURCE LINE # 161
01BE 7FAF              MOV     R7,#0AFH
01C0 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 162
01C3 120000      E     LCALL   ReadData
01C6 EF                MOV     A,R7
01C7 645A              XRL     A,#05AH
01C9 6003              JZ      ?C0041
01CB 120000      R     LCALL   error
                                           ; SOURCE LINE # 164
01CE         ?C0041:
01CE 22                RET     
01CF         L?0078:
01CF FF                MOV     R7,A
01D0 120000      E     LCALL   _SendData
01D3 120000      E     LCALL   ReadData
01D6 EF                MOV     A,R7
01D7 645A              XRL     A,#05AH
01D9 22                RET     
01DA         L?0085:
01DA 120000      E     LCALL   _SendData
01DD 120000      E     LCALL   ReadData
01E0 EF                MOV     A,R7
01E1 645A              XRL     A,#05AH
01E3 22                RET     
             ; FUNCTION flash_T3 (END)

             ; FUNCTION flash_T4 (BEGIN)
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 173
0000         ?C0042:
                                           ; SOURCE LINE # 174
0000 120000      E     LCALL   ReadData
0003 EF                MOV     A,R7
0004 245F              ADD     A,#05FH
0006 6026              JZ      ?C0046
0008 14                DEC     A
0009 602D              JZ      ?C0047
000B 24F8              ADD     A,#0F8H
000D 603E              JZ      ?C0048
000F 14                DEC     A
0010 7003              JNZ     $ + 5H
0012 020000      R     LJMP    ?C0051
0015 14                DEC     A
0016 7003              JNZ     $ + 5H
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 17  

0018 020000      R     LJMP    ?C0052
001B 24FD              ADD     A,#0FDH
001D 7003              JNZ     $ + 5H
001F 020000      R     LJMP    ?C0056
0022 240F              ADD     A,#0FH
0024 70DA              JNZ     ?C0042
                                           ; SOURCE LINE # 175
0026         ?C0045:
                                           ; SOURCE LINE # 176
0026 120000      E     LCALL   ReadData
0029 900000      R     MOV     DPTR,#a+03H
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
002C 8006              SJMP    ?C0064
                                           ; SOURCE LINE # 180
002E         ?C0046:
                                           ; SOURCE LINE # 181
002E 120000      E     LCALL   ReadData
0031 900000      R     MOV     DPTR,#a+02H
0034         ?C0064:
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0036 8010              SJMP    ?C0065
                                           ; SOURCE LINE # 185
0038         ?C0047:
                                           ; SOURCE LINE # 186
0038 120000      E     LCALL   ReadData
003B 900000      R     MOV     DPTR,#a
003E E4                CLR     A
003F F0                MOVX    @DPTR,A
0040 A3                INC     DPTR
0041 EF                MOV     A,R7
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0043 900000      R     MOV     DPTR,#a
0046 E0                MOVX    A,@DPTR
0047 A3                INC     DPTR
0048         ?C0065:
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
                                           ; SOURCE LINE # 188
004A 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 190
004D         ?C0048:
                                           ; SOURCE LINE # 191
004D 120000      E     LCALL   ReadData
0050 900000      R     MOV     DPTR,#len
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
0055 E4                CLR     A
0056 900000      R     MOV     DPTR,#cot
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
005A 900000      R     MOV     DPTR,#a
005D E0                MOVX    A,@DPTR
005E FC                MOV     R4,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FD                MOV     R5,A
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 18  

0062 A3                INC     DPTR
0063 E0                MOVX    A,@DPTR
0064 FE                MOV     R6,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 900000      R     MOV     DPTR,#old
006B 8038              SJMP    ?C0067
006D         ?C0049:
                                           ; SOURCE LINE # 195
006D 900000      R     MOV     DPTR,#len
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 900000      R     MOV     DPTR,#cot
0075 E0                MOVX    A,@DPTR
0076 C3                CLR     C
0077 9F                SUBB    A,R7
0078 5030              JNC     ?C0050
                                           ; SOURCE LINE # 197
007A 7B01              MOV     R3,#01H
007C 7A00        R     MOV     R2,#HIGH a
007E 7900        R     MOV     R1,#LOW a
0080 C002              PUSH    AR2
0082 120000      R     LCALL   L?0080
0085 D002              POP     AR2
                                           ; SOURCE LINE # 198
0087 120000      R     LCALL   L?0074
008A 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 199
008D 120000      R     LCALL   L?0075
0090 900000      R     MOV     DPTR,#crc
0093 E0                MOVX    A,@DPTR
0094 2F                ADD     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
0096 900000      R     MOV     DPTR,#cot
0099 E0                MOVX    A,@DPTR
009A 04                INC     A
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
009C 900000      R     MOV     DPTR,#a
009F 120000      R     LCALL   L?0082
00A2 900000      R     MOV     DPTR,#a
00A5         ?C0067:
00A5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 203
00A8 80C3              SJMP    ?C0049
00AA         ?C0050:
                                           ; SOURCE LINE # 205
00AA 900000      R     MOV     DPTR,#old
00AD 120000      R     LCALL   L?0073
00B0 FF                MOV     R7,A
00B1 900000      R     MOV     DPTR,#a
00B4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 206
00B7 900000      R     MOV     DPTR,#crc
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC         ?C0066:
                                           ; SOURCE LINE # 207
00BC 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 209
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 19  

00BF         ?C0051:
                                           ; SOURCE LINE # 210
00BF 7B01              MOV     R3,#01H
00C1 7A00        R     MOV     R2,#HIGH a
00C3 7900        R     MOV     R1,#LOW a
00C5 C002              PUSH    AR2
00C7 120000      R     LCALL   L?0080
00CA D002              POP     AR2
                                           ; SOURCE LINE # 211
00CC 120000      R     LCALL   L?0074
00CF         ?C0068:
                                           ; SOURCE LINE # 212
00CF 8045              SJMP    ?C0069
                                           ; SOURCE LINE # 214
00D1         ?C0052:
                                           ; SOURCE LINE # 215
00D1 900000      R     MOV     DPTR,#flash+0DH
00D4 120000      R     LCALL   L?0073
00D7 FF                MOV     R7,A
00D8 900000      R     MOV     DPTR,#d
00DB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 216
00DE E4                CLR     A
00DF 900000      R     MOV     DPTR,#i
00E2 F0                MOVX    @DPTR,A
00E3         ?C0053:
00E3 900000      R     MOV     DPTR,#d
00E6 120000      R     LCALL   L?0073
00E9 6401              XRL     A,#01H
00EB FF                MOV     R7,A
00EC EC                MOV     A,R4
00ED 4D                ORL     A,R5
00EE 4E                ORL     A,R6
00EF 4F                ORL     A,R7
00F0 601F              JZ      ?C0054
00F2 900000      R     MOV     DPTR,#i
00F5 E0                MOVX    A,@DPTR
00F6 C3                CLR     C
00F7 9420              SUBB    A,#020H
00F9 5016              JNC     ?C0054
                                           ; SOURCE LINE # 217
00FB 120000      R     LCALL   L?0075
00FE 7801              MOV     R0,#01H
0100 120000      E     LCALL   ?C?ULSHR
0103 900000      R     MOV     DPTR,#d
0106 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 218
0109 900000      R     MOV     DPTR,#i
010C E0                MOVX    A,@DPTR
010D 04                INC     A
010E F0                MOVX    @DPTR,A
010F 80D2              SJMP    ?C0053
0111         ?C0054:
                                           ; SOURCE LINE # 219
0111 900000      R     MOV     DPTR,#i
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116         ?C0069:
0116 120000      E     LCALL   _SendData
                                           ; SOURCE LINE # 220
0119 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 222
C51 COMPILER V9.01   FLASH_CHIP                                                            06/30/2017 19:54:29 PAGE 20  

011C         ?C0056:
                                           ; SOURCE LINE # 223
011C 7F5A              MOV     R7,#05AH
011E 020000      E     LJMP    _SendData
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
0121         t4_end:
                                           ; SOURCE LINE # 229
0121         ?C0058:
0121 22                RET     
             ; FUNCTION flash_T4 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1225    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      65
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
